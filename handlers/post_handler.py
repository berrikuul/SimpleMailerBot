import html
import re
from datetime import datetime
from telebot import types
from utils.helpers import extract_message_data, format_post_preview
from config import GROUP_CHAT_ID


def setup_post_handlers(bot, db, scheduler):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø–æ—Å—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø—É"""

    # –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
    bot.temp_post_data = {}

    @bot.message_handler(commands=['post'])
    def post_command(message):
        """–ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞ –≤ –≥—Ä—É–ø–ø—É"""

        if not message.reply_to_message and len(message.text.split()) <= 1:
            show_post_examples(message)
            return

        message_text, image_url, parse_mode = extract_message_data(message)

        if not message_text and not image_url:
            bot.reply_to(message,
                         "‚ùå <b>–ù–µ—á–µ–≥–æ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤ –ø–æ—Å—Ç–µ.</b>\n\n"
                         "üí° <b>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤:</b>\n"
                         "‚Ä¢ –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /post\n"
                         "‚Ä¢ –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∫–æ–º–∞–Ω–¥–æ–π /post\n"
                         "‚Ä¢ –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Ñ–æ—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π /post\n\n"
                         "üìù <b>–ü—Ä–∏–º–µ—Ä:</b> <code>/post –ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º! üëã</code>",
                         parse_mode='HTML'
                         )
            return

        ask_post_schedule(message, message_text, image_url, parse_mode)

    def show_post_examples(message):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã /post"""
        examples_text = """
<b>üìù –ö–ê–ö –°–û–ó–î–ê–¢–¨ –ü–û–°–¢:</b>

<u>–°–ø–æ—Å–æ–± 1: –¢–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã</u>
<code>/post –í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –°–µ–≥–æ–¥–Ω—è –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å! üåû</code>

<u>–°–ø–æ—Å–æ–± 2: –û—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ</u>
1. –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
2. –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π <code>/post</code>

<u>–°–ø–æ—Å–æ–± 3: –û—Ç–≤–µ—Ç –Ω–∞ —Ñ–æ—Ç–æ</u>
1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ (–º–æ–∂–Ω–æ —Å –ø–æ–¥–ø–∏—Å—å—é)
2. –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Ñ–æ—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π <code>/post</code>

<u>–°–ø–æ—Å–æ–± 4: –¢–µ–∫—Å—Ç + —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É</u>
<code>/post –°–º–æ—Ç—Ä–∏—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ! [img:https://example.com/photo.jpg]</code>

<b>üé® –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï –¢–ï–ö–°–¢–ê:</b>
‚Ä¢ <b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b> - *–∂–∏—Ä–Ω—ã–π* –∏–ª–∏ <b>–∂–∏—Ä–Ω—ã–π</b>
‚Ä¢ <i>–ö—É—Ä—Å–∏–≤</i> - _–∫—É—Ä—Å–∏–≤_ –∏–ª–∏ <i>–∫—É—Ä—Å–∏–≤</i>
‚Ä¢ üî• –≠–º–æ–¥–∑–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è!

<b>üìã –ü–†–ò–ú–ï–†–´ –ü–û–°–¢–û–í:</b>

<code>/post *–í–∞–∂–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ!* üì¢
–°–µ–≥–æ–¥–Ω—è –≤ 18:00 —Å–æ—Å—Ç–æ–∏—Ç—Å—è —Å–æ–±—Ä–∞–Ω–∏–µ.
–ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ! üéØ</code>

<code>/post <b>–ù–æ–≤–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞</b> üöÄ
–†–∞–¥—ã —Å–æ–æ–±—â–∏—Ç—å –æ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö!
–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ: example.com</code>
        """

        bot.reply_to(message, examples_text, parse_mode='HTML')

    def ask_post_schedule(message, message_text, image_url, parse_mode):
        """–°–ø—Ä–æ—Å–∏—Ç—å –∫–æ–≥–¥–∞ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç"""
        markup = types.InlineKeyboardMarkup()
        btn_now = types.InlineKeyboardButton("üöÄ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å", callback_data="post_now")
        btn_schedule = types.InlineKeyboardButton("üìÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å", callback_data="post_schedule")

        markup.row(btn_now, btn_schedule)

        preview = format_post_preview(message_text)

        ask_text = f"""
    <b>üìù –í–∞—à –ø–æ—Å—Ç –≥–æ—Ç–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:</b>

    {preview}

    <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
    ‚Ä¢ <b>üöÄ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å</b> - –ø–æ—Å—Ç —Å—Ä–∞–∑—É –ø–æ—è–≤–∏—Ç—Å—è –≤ –≥—Ä—É–ø–ø–µ
    ‚Ä¢ <b>üìÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å</b> - –ø–æ—Å—Ç –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
        """

        sent_message = bot.send_message(
            message.chat.id,
            ask_text,
            reply_markup=markup,
            parse_mode='HTML'
        )

        post_key = f"{sent_message.chat.id}:{sent_message.message_id}"
        bot.temp_post_data[post_key] = {
            'message_text': message_text,
            'image_url': image_url,
            'user_id': message.from_user.id,
            'original_message_id': sent_message.message_id,
            'parse_mode': parse_mode
        }

    @bot.callback_query_handler(func=lambda call: call.data.startswith('post_'))
    def handle_post_callback(call):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ—Å—Ç–æ–≤"""
        post_key = f"{call.message.chat.id}:{call.message.message_id}"

        if post_key not in bot.temp_post_data:
            bot.answer_callback_query(call.id, "‚ùå –î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞ —É—Å—Ç–∞—Ä–µ–ª–∏. –°–æ–∑–¥–∞–π—Ç–µ –ø–æ—Å—Ç –∑–∞–Ω–æ–≤–æ.")
            return

        post_data = bot.temp_post_data[post_key]
        message_text = post_data['message_text']
        image_url = post_data['image_url']

        if call.data == "post_schedule":
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å"
            handle_schedule_post(call, message_text, image_url, post_key)

        elif call.data == "post_now":
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å"
            handle_publish_now(call, message_text, image_url, post_key)

    def handle_schedule_post(call, message_text, image_url, post_key):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å'"""
        post_data = bot.temp_post_data[post_key]
        parse_mode = post_data.get('parse_mode', 'HTML')
        schedule_help_text = """
<b>üìÖ –ó–ê–ü–õ–ê–ù–ò–†–û–í–ê–¢–¨ –ü–û–°–¢</b>

<u>–§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏:</u>
<code>–ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:–ú–ú</code>

<u>–ü—Ä–∏–º–µ—Ä—ã:</u>
‚Ä¢ <code>2024-12-25 18:30</code> - 25 –¥–µ–∫–∞–±—Ä—è 2024 –≤ 18:30
‚Ä¢ <code>2024-12-31 23:59</code> - 31 –¥–µ–∫–∞–±—Ä—è 2024 –≤ 23:59
‚Ä¢ <code>2025-01-01 12:00</code> - 1 —è–Ω–≤–∞—Ä—è 2025 –≤ 12:00

üëá <b>–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:</b>
        """

        bot.edit_message_text(
            schedule_help_text,
            call.message.chat.id,
            call.message.message_id,
            parse_mode='HTML'
        )

        bot.temp_post_data[post_key]['waiting_for_schedule'] = True

        bot.register_next_step_handler_by_chat_id(
            call.message.chat.id,
            process_schedule_time,
            message_text,
            image_url,
            post_key
        )

        bot.answer_callback_query(call.id, "üìÖ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è")

    def process_schedule_time(message, message_text, image_url, post_key, parse_mode):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
        try:
            if message.text.startswith('/'):
                bot.reply_to(message, "‚ùå <b>–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.</b>", parse_mode='HTML')
                cleanup_post_data(bot, post_key)
                return

            scheduled_time = datetime.strptime(message.text, "%Y-%m-%d %H:%M")
            now = datetime.now()

            if scheduled_time <= now:
                bot.reply_to(message,
                             "‚ùå <b>–£–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —É–∂–µ –ø—Ä–æ—à–ª–æ.</b>\n\n"
                             "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—É–¥—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è.",
                             parse_mode='HTML'
                             )
                cleanup_post_data(bot, post_key)
                return

            post_id = db.add_group_post(message.from_user.username, message_text, image_url, scheduled_time.isoformat())

            scheduler.schedule_group_post(post_id, message_text, image_url, scheduled_time,
                                          parse_mode)

            success_text = f"""
    <b>‚úÖ –ü–æ—Å—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω!</b>

    üìù <b>–ü—Ä–µ–≤—å—é:</b> {format_post_preview(message_text, 80)}
    üìÖ <b>–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:</b> {scheduled_time.strftime('%d.%m.%Y %H:%M')}
    üÜî <b>ID –ø–æ—Å—Ç–∞:</b> {post_id}
    üë§ <b>–ê–≤—Ç–æ—Ä:</b> @{message.from_user.username or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}

    üí´ <b>–ü–æ—Å—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –≥—Ä—É–ø–ø–µ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è!</b>
            """

            bot.reply_to(message, success_text, parse_mode='HTML')

            cleanup_post_data(bot, post_key)

        except ValueError:
            error_text = """
    ‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏!</b>

    <u>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç:</u>
    <code>–ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:–ú–ú</code>

    <u>–ü—Ä–∏–º–µ—Ä—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–≤–æ–¥–∞:</u>
    ‚Ä¢ <code>2024-12-25 18:30</code>
    ‚Ä¢ <code>2024-12-31 23:59</code>
    ‚Ä¢ <code>2025-01-01 12:00</code>

    üëá <b>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:</b>
            """

            bot.reply_to(message, error_text, parse_mode='HTML')

            bot.register_next_step_handler(
                message,
                process_schedule_time,
                message_text,
                image_url,
                post_key,
                parse_mode
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–∞: {e}")
            bot.reply_to(message, "‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞.</b>", parse_mode='HTML')
            cleanup_post_data(bot, post_key)

    def handle_publish_now(call, message_text, image_url, post_key):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å'"""

        success = publish_post_now(bot, message_text, image_url)

        if success:

            bot.edit_message_text(
                "‚úÖ <b>–ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –≥—Ä—É–ø–ø–µ!</b>",
                call.message.chat.id,
                call.message.message_id,
                parse_mode='HTML'
            )


            preview = format_post_preview(message_text, 100)
            preview_text = f"""
<b>üìã –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç:</b>

{preview}

üí´ <b>–ü–æ—Å—Ç —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –≥—Ä—É–ø–ø–µ!</b>
            """

            bot.send_message(
                call.message.chat.id,
                preview_text,
                parse_mode='HTML'
            )
        else:
            bot.edit_message_text(
                "‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞ –≤ –≥—Ä—É–ø–ø—É.</b>\n\n"
                "<b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:</b>\n"
                "‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω –ª–∏ –±–æ—Ç –≤ –≥—Ä—É–ø–ø—É\n"
                "‚Ä¢ –ï—Å—Ç—å –ª–∏ —É –±–æ—Ç–∞ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
                "‚Ä¢ –ú–æ–∂–µ—Ç –ª–∏ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è\n\n"
                "üí° <b>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É</b> <code>/test_post</code> <b>–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏</b>",
                call.message.chat.id,
                call.message.message_id,
                parse_mode='HTML'
            )


        cleanup_post_data(bot, post_key)
        bot.answer_callback_query(call.id, "‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!" if success else "‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")

    def publish_post_now(bot, message_text, image_url):
        """–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞ –≤ –≥—Ä—É–ø–ø—É"""
        try:
            if image_url:

                result = bot.send_photo(
                    chat_id=GROUP_CHAT_ID,
                    photo=image_url,
                    caption=message_text,
                    parse_mode='HTML'
                )
                print(f"‚úÖ –§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É. Message ID: {result.message_id}")
            else:

                result = bot.send_message(
                    chat_id=GROUP_CHAT_ID,
                    text=message_text,
                    parse_mode='HTML'
                )
                print(f"‚úÖ –¢–µ–∫—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É. Message ID: {result.message_id}")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞ –≤ –≥—Ä—É–ø–ø—É {GROUP_CHAT_ID}: {e}")
            return False

    def cleanup_post_data(bot, post_key):
        """–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞"""
        if post_key in bot.temp_post_data:
            del bot.temp_post_data[post_key]

    @bot.message_handler(commands=['my_posts'])
    def my_posts_command(message):
        """–ú–æ–∏ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã"""
        user = message.from_user
        posts = db.get_all_group_posts()
        user_posts = [p for p in posts if p[1] == user.username and not p[5]]

        if not user_posts:
            bot.reply_to(message, "üì≠ <b>–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤.</b>", parse_mode='HTML')
            return

        response = "<b>üìÖ –í–∞—à–∏ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã:</b>\n\n"

        for post in user_posts:
            post_id, author, post_text, image_url, scheduled_time, sent = post
            preview = format_post_preview(post_text, 50)
            time_str = datetime.fromisoformat(scheduled_time).strftime('%d.%m.%Y %H:%M')

            response += f"""
üÜî <b>ID:</b> {post_id}
üìù <b>–¢–µ–∫—Å—Ç:</b> {preview}
üìÖ <b>–í—Ä–µ–º—è:</b> {time_str}
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
            """

        bot.reply_to(message, response, parse_mode='HTML')

    @bot.message_handler(commands=['test_post'])
    def test_post_command(message):
        """–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
        test_text = """
üß™ <b>–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç</b>

–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞!

‚úÖ –ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ, –∑–Ω–∞—á–∏—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!
üïí –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {datetime.now().strftime('%H:%M %d.%m.%Y')}
        """

        success = publish_post_now(bot, test_text, None)

        if success:
            bot.reply_to(message,
                         "‚úÖ <b>–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –≥—Ä—É–ø–ø–µ!</b>\n\n"
                         "üí´ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≥—Ä—É–ø–ø—É - —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ç–∞–º.",
                         parse_mode='HTML'
                         )
        else:
            bot.reply_to(message,
                         "‚ùå <b>–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞.</b>\n\n"
                         "<b>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:</b>\n"
                         "‚Ä¢ –ë–æ—Ç –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É\n"
                         "‚Ä¢ –ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n"
                         "‚Ä¢ –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π\n"
                         "‚Ä¢ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID –≥—Ä—É–ø–ø—ã\n\n"
                         "üîß <b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–µ.</b>",
                         parse_mode='HTML'
                         )

    @bot.message_handler(commands=['post_help'])
    def post_help_command(message):
        """–ü–æ–º–æ—â—å –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –ø–æ—Å—Ç–æ–≤"""
        show_post_examples(message)