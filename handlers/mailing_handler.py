import html
import re
from datetime import datetime
from telebot import types
from utils.helpers import extract_message_data, format_post_preview, is_admin


def setup_mailing_handlers(bot, db, scheduler):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ä–∞—Å—Å—ã–ª–æ–∫"""


    bot.temp_mailing_data = {}

    @bot.message_handler(commands=['mailing'])
    def mailing_command(message):
        """–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
        user = message.from_user

        if not is_admin(user.username):
            bot.reply_to(message, "‚ùå <b>–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞—Å—Å—ã–ª–æ–∫.</b>", parse_mode='HTML')
            return


        if not message.reply_to_message and len(message.text.split()) <= 1:
            show_mailing_examples(message)
            return

        message_text, image_url, parse_mode = extract_message_data(message)

        if not message_text and not image_url:
            bot.reply_to(message,
                         "‚ùå <b>–ù–µ—á–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ —Ä–∞—Å—Å—ã–ª–∫–µ.</b>\n\n"
                         "üí° <b>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤:</b>\n"
                         "‚Ä¢ –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /mailing\n"
                         "‚Ä¢ –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∫–æ–º–∞–Ω–¥–æ–π /mailing\n"
                         "‚Ä¢ –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Ñ–æ—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π /mailing\n\n"
                         "üìù <b>–ü—Ä–∏–º–µ—Ä:</b> <code>/mailing –í–∞–∂–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ! üö®</code>",
                         parse_mode='HTML'
                         )
            return

        ask_mailing_schedule(message, message_text, image_url, parse_mode)

    def show_mailing_examples(message):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã /mailing"""
        examples_text = """
<b>üìß –ö–ê–ö –û–¢–ü–†–ê–í–ò–¢–¨ –†–ê–°–°–´–õ–ö–£:</b>

<u>–°–ø–æ—Å–æ–± 1: –¢–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã</u>
<code>/mailing –í–∞–∂–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤! üì¢</code>

<u>–°–ø–æ—Å–æ–± 2: –û—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ</u>
1. –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
2. –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π <code>/mailing</code>

<u>–°–ø–æ—Å–æ–± 3: –û—Ç–≤–µ—Ç –Ω–∞ —Ñ–æ—Ç–æ</u>
1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ (–º–æ–∂–Ω–æ —Å –ø–æ–¥–ø–∏—Å—å—é)
2. –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Ñ–æ—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π <code>/mailing</code>

<b>üé® –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï –¢–ï–ö–°–¢–ê:</b>
‚Ä¢ <b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b> - *–∂–∏—Ä–Ω—ã–π* –∏–ª–∏ <b>–∂–∏—Ä–Ω—ã–π</b>
‚Ä¢ <i>–ö—É—Ä—Å–∏–≤</i> - _–∫—É—Ä—Å–∏–≤_ –∏–ª–∏ <i>–∫—É—Ä—Å–∏–≤</i>
‚Ä¢ üî• –≠–º–æ–¥–∑–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è!

<b>üìã –ü–†–ò–ú–ï–†–´ –†–ê–°–°–´–õ–û–ö:</b>

<code>/mailing *–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!* üéÅ
–¢–æ–ª—å–∫–æ –¥–ª—è –Ω–∞—à–∏—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ —Å–∫–∏–¥–∫–∞ 20%!
–£—Å–ø–µ–π—Ç–µ –¥–æ –∫–æ–Ω—Ü–∞ –Ω–µ–¥–µ–ª–∏! ‚è≥</code>

<code>/mailing <b>–ù–æ–≤–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞</b> üöÄ
–†–∞–¥—ã —Å–æ–æ–±—â–∏—Ç—å –æ –∑–∞–ø—É—Å–∫–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π!
–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ: example.com</code>
        """

        bot.reply_to(message, examples_text, parse_mode='HTML')

    def ask_mailing_schedule(message, message_text, image_url, parse_mode):
        """–°–ø—Ä–æ—Å–∏—Ç—å –∫–æ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É"""
        subscribers_count = len(db.get_all_subscribers())

        markup = types.InlineKeyboardMarkup()
        btn_now = types.InlineKeyboardButton("üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–µ–π—á–∞—Å", callback_data="mailing_now")
        btn_schedule = types.InlineKeyboardButton("üìÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å", callback_data="mailing_schedule")

        markup.row(btn_now, btn_schedule)

        preview = format_post_preview(message_text)

        ask_text = f"""
<b>üìß –†–∞—Å—Å—ã–ª–∫–∞ –≥–æ—Ç–æ–≤–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ:</b>

{preview}

üë• <b>–ü–æ–ª—É—á–∞—Ç–µ–ª–µ–π:</b> {subscribers_count}

<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
‚Ä¢ <b>üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–µ–π—á–∞—Å</b> - —Ä–∞—Å—Å—ã–ª–∫–∞ —É–π–¥–µ—Ç –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º —Å—Ä–∞–∑—É
‚Ä¢ <b>üìÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å</b> - —Ä–∞—Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
        """


        sent_message = bot.send_message(
            message.chat.id,
            ask_text,
            reply_markup=markup,
            parse_mode='HTML'
        )


        mailing_key = f"{sent_message.chat.id}:{sent_message.message_id}"
        bot.temp_mailing_data[mailing_key] = {
            'message_text': message_text,
            'image_url': image_url,
            'parse_mode': parse_mode,
            'user_id': message.from_user.id,
            'original_message_id': sent_message.message_id
        }

    @bot.callback_query_handler(func=lambda call: call.data.startswith('mailing_'))
    def handle_mailing_callback(call):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ —Ä–∞—Å—Å—ã–ª–æ–∫"""
        mailing_key = f"{call.message.chat.id}:{call.message.message_id}"

        if mailing_key not in bot.temp_mailing_data:
            bot.answer_callback_query(call.id, "‚ùå –î–∞–Ω–Ω—ã–µ —Ä–∞—Å—Å—ã–ª–∫–∏ —É—Å—Ç–∞—Ä–µ–ª–∏. –°–æ–∑–¥–∞–π—Ç–µ —Ä–∞—Å—Å—ã–ª–∫—É –∑–∞–Ω–æ–≤–æ.")
            return

        mailing_data = bot.temp_mailing_data[mailing_key]
        message_text = mailing_data['message_text']
        image_url = mailing_data['image_url']
        parse_mode = mailing_data['parse_mode']

        if call.data == "mailing_schedule":
            handle_schedule_mailing(call, message_text, image_url, parse_mode, mailing_key)

        elif call.data == "mailing_now":
            handle_send_mailing_now(call, message_text, image_url, parse_mode, mailing_key)

    def handle_schedule_mailing(call, message_text, image_url, parse_mode, mailing_key):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å' –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
        schedule_help_text = """
<b>üìÖ –ó–ê–ü–õ–ê–ù–ò–†–û–í–ê–¢–¨ –†–ê–°–°–´–õ–ö–£</b>

<u>–§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏:</u>
<code>–ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:–ú–ú</code>

<u>–ü—Ä–∏–º–µ—Ä—ã:</u>
‚Ä¢ <code>2024-12-25 09:00</code> - 25 –¥–µ–∫–∞–±—Ä—è 2024 –≤ 09:00
‚Ä¢ <code>2024-12-31 18:00</code> - 31 –¥–µ–∫–∞–±—Ä—è 2024 –≤ 18:00
‚Ä¢ <code>2025-01-01 12:00</code> - 1 —è–Ω–≤–∞—Ä—è 2025 –≤ 12:00

üëá <b>–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:</b>
        """

        bot.edit_message_text(
            schedule_help_text,
            call.message.chat.id,
            call.message.message_id,
            parse_mode='HTML'
        )

        bot.temp_mailing_data[mailing_key]['waiting_for_schedule'] = True

        bot.register_next_step_handler_by_chat_id(
            call.message.chat.id,
            process_mailing_schedule_time,
            message_text,
            image_url,
            parse_mode,
            mailing_key
        )

        bot.answer_callback_query(call.id, "üìÖ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏")

    def process_mailing_schedule_time(message, message_text, image_url, parse_mode, mailing_key):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
        try:
            if message.text.startswith('/'):
                bot.reply_to(message, "‚ùå <b>–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ.</b>", parse_mode='HTML')
                cleanup_mailing_data(bot, mailing_key)
                return

            scheduled_time = datetime.strptime(message.text, "%Y-%m-%d %H:%M")
            now = datetime.now()

            if scheduled_time <= now:
                bot.reply_to(message,
                             "‚ùå <b>–£–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —É–∂–µ –ø—Ä–æ—à–ª–æ.</b>\n\n"
                             "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—É–¥—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è.",
                             parse_mode='HTML'
                             )
                cleanup_mailing_data(bot, mailing_key)
                return

            subscribers_count = len(db.get_all_subscribers())

            post_id = db.add_mailing_post(message.from_user.username, message_text, image_url,
                                          scheduled_time.isoformat())

            scheduler.schedule_mailing_post(post_id, message_text, image_url, scheduled_time, parse_mode)

            success_text = f"""
<b>‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞!</b>

üìù <b>–ü—Ä–µ–≤—å—é:</b> {format_post_preview(message_text, 80)}
üìÖ <b>–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:</b> {scheduled_time.strftime('%d.%m.%Y %H:%M')}
üë• <b>–ü–æ–ª—É—á–∞—Ç–µ–ª–µ–π:</b> {subscribers_count}
üÜî <b>ID —Ä–∞—Å—Å—ã–ª–∫–∏:</b> {post_id}
üë§ <b>–ê–≤—Ç–æ—Ä:</b> @{message.from_user.username or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}

üí´ <b>–†–∞—Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è!</b>
            """

            bot.reply_to(message, success_text, parse_mode='HTML')

            cleanup_mailing_data(bot, mailing_key)

        except ValueError:
            error_text = """
‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏!</b>

<u>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç:</u>
<code>–ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:–ú–ú</code>

<u>–ü—Ä–∏–º–µ—Ä—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–≤–æ–¥–∞:</u>
‚Ä¢ <code>2024-12-25 09:00</code>
‚Ä¢ <code>2024-12-31 18:00</code>
‚Ä¢ <code>2025-01-01 12:00</code>

üëá <b>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:</b>
            """

            bot.reply_to(message, error_text, parse_mode='HTML')
            bot.register_next_step_handler(
                message,
                process_mailing_schedule_time,
                message_text,
                image_url,
                parse_mode,
                mailing_key
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏: {e}")
            bot.reply_to(message, "‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–∞—Å—Å—ã–ª–∫–∏.</b>", parse_mode='HTML')
            cleanup_mailing_data(bot, mailing_key)

    def handle_send_mailing_now(call, message_text, image_url, parse_mode, mailing_key):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–µ–π—á–∞—Å' –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
        subscribers_count = len(db.get_all_subscribers())

        if subscribers_count == 0:
            bot.edit_message_text(
                "‚ùå <b>–ù–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.</b>\n\n"
                "–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ /start",
                call.message.chat.id,
                call.message.message_id,
                parse_mode='HTML'
            )
            cleanup_mailing_data(bot, mailing_key)
            return


        bot.edit_message_text(
            f"üì§ <b>–ù–∞—á–∏–Ω–∞—é —Ä–∞—Å—Å—ã–ª–∫—É –¥–ª—è {subscribers_count} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤...</b>\n\n"
            "‚è≥ <i>–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç</i>",
            call.message.chat.id,
            call.message.message_id,
            parse_mode='HTML'
        )


        success_count, fail_count = scheduler.send_broadcast(message_text, image_url, parse_mode)


        report_text = f"""
<b>üìä –û—Ç—á–µ—Ç –æ —Ä–∞—Å—Å—ã–ª–∫–µ:</b>

‚úÖ <b>–£—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ:</b> {success_count}
‚ùå <b>–ù–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ:</b> {fail_count}
üë• <b>–í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤:</b> {subscribers_count}

üí´ <b>–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</b> {(success_count / subscribers_count * 100) if subscribers_count > 0 else 0:.1f}%
        """

        bot.edit_message_text(
            report_text,
            call.message.chat.id,
            call.message.message_id,
            parse_mode='HTML'
        )


        cleanup_mailing_data(bot, mailing_key)
        bot.answer_callback_query(call.id, f"‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞: {success_count}/{subscribers_count}")

    def cleanup_mailing_data(bot, mailing_key):
        """–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Ä–∞—Å—Å—ã–ª–∫–∏"""
        if mailing_key in bot.temp_mailing_data:
            del bot.temp_mailing_data[mailing_key]

    @bot.message_handler(commands=['mailing_help'])
    def mailing_help_command(message):
        """–ü–æ–º–æ—â—å –ø–æ —Ä–∞—Å—Å—ã–ª–∫–∞–º"""
        show_mailing_examples(message)